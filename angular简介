#AngularJS简介#

这一章的目标是让你熟悉基础术语和技术，并且让你对AngualrJS如何运作有一个基本理解。我们将会把各个模块组合在一起来帮你你组建一个AngularJS应用,即使你之前从来没开发过AngularJS应用.

##Web网页是如何到达你的浏览器的##

首先我们把Internet互联网想象成一个邮局.当你给朋友发信时,你首先把信件内容写在一张纸上，然后把朋友的地址写在信封上,然后把信放进信封.

当你在邮局把信投递以后,邮件分类装置根据邮政编码和地址来找到你的朋友的居住地址.如果她住在公寓大楼，邮局服务人员会把信投寄到你朋友公寓的前台,然后公寓大厦的工作人员再根据房间号来处理邮件.

互联网的工作方式与之相似,就像大量住宅和公寓是由街道连通在一起一样,大量的电脑是由路由器和通信线路连接在一起,每一个计算机有一个独一无二的网络地址,网络通过这个地址来找到这个计算机.

与上面的公寓大厦接收邮件方式相似:和大厦内的所有公寓是共享同一个邮寄地址一样,若干台电脑在同一个内网或路由器下(比如当你在星巴克用WiFi上网的时候),你的机器和别的机器是共享同一个IP地址.你的计算机可以被独立地识别，是因为内网IP地址(就像大厦内的公寓房间号),路由器是知道这个内网地址的.(就像大厦的工作人员是知道你朋友的公寓房间号的).

    IP代表着互联网网际通信协议.一个IP地址是一个数字标识符，被分配给参与到一个网络内的每一个设备.计算机、打印机,甚至手机都拥有IP地址.

    主要有两种类型的IP地址:ipv4和ipv6地址.目前主要使用的是ipv4地址,它大概像这样："192.168.0.199",ipv6地址是这样的："2001:0db8:0000:0000:0000:ff00:0042:8329".

当你打开你电脑上的Web浏览器,输入"http://google.com" 地址.你的Web浏览器向互联网(准确的说是向DNS域名服务器)询问"google.com"这个域名的机器在哪儿?如果DNS域名服务器知道你所询问的域名的IP地址,它就把这个IP回复给你.如果它不知道,他就把你的询问请求转发给其它DNS域名服务器直到该域名的IP地址被发现为止,然后回复给你的电脑.通过在你的命令行终端界面上输入以下命令你可以得到DNS服务器的回答响应:

    $ dig google.com

    如果你是用的是Mac电脑，你可以打开叫Terminal的命令行终端.通常你可以在/Applications/Utilities目录内找到它.如果你使用的是Windows系统,你可以在开始菜单中打开Run对话框,然后输入cmd来开启命令行终端.

一旦DNS域名服务器给你回复了你所要寻找域名的IP地址.浏览器就会给那个IP地址所在的机器发一个消息来请求你所需要的Web页面.

    每个Web页面URL路径会有它自己的HTML页面.比如：你请求 http://google.com 得到的页面肯定和请求 http://google.com/images 得到的页面不一样.

现在你的电脑已经得到你的你要请求 http://google.com 地址所需的IP地址.他就会向Google服务器请求你显示页面所需的HTML文件.

远程Web服务器一旦给你回复了HTML文件，你的Web浏览器就会渲染这个页面.(浏览器的渲染结果会使页面的显示就像它的设计期望的外观那样)

##什么是浏览器##

在我们开始AngualrJS之前，知道浏览器在渲染页面时做了什么也是很重要的.

Web浏览器分很多种:今天最常见的有Chrome、Safari、Mozilla Firefox和IE浏览器.但是他们的内核基本干着相同的事情：取得Web页面然后把它显示给用户.

你的浏览器得到页面的HTML文本之后,把它解析成文档树结构，这个结构才对浏览器有意义.然后把页面的内容显示出来.在显示给你之前，利用CSS样式表对内容进行外观格式化.所有这一切都是后台发生的.

作为Web开发者，我们的目标就是建立HTML页面的结构和内容以便于在Web浏览器中显示给用户的结果更酷.

使用Angualar,我们不仅仅构造文档结构，而且构建用户和我们Web应用之间的交互设计.

##什么是AngualrJS##

官方的AngularJS介绍是这样描述AnguarJS的：

    完全采用JavaScript实现的客户端技术.它与Web经典开发技术(HTML、CSS和JavaScript)协同工作，使得Web应用的开发比以往任何时候都更简单更快.

它是一个主要用来构建单页Web应用的框架.AngularJS在开发者和Web应用开发任务之间增加了一个抽象层，这样便使得构建现代交互式Web应用变得很简单。

    AngualrJS开发团队把它描述为动态Web应用结构化框架。

AngualrjS使得构建Web应用这件事的难度变得难以置信的简单;同时构建复杂应用也变得很简单.AngularJS实现了那些用户在现在Web应用中已经习惯的高级特性，比如：

* 应用逻辑、数据模型和视图之间的关注分离
* Ajax服务
* 依赖注入
* 浏览器历史记录(使得收藏夹\前进后退按钮这些功能的效果和常规Web应用的效果一样)
* 测试
* 更多优秀特性

##它的不同之处是什么##

在其它JavaScript框架中，我们不得不扩展自定义JavaScript对象,并且得从外到内地操作DOM树.比如使用jQuery,为了在DOM树中添加一个按钮元素,我们不得不搞清在哪儿放置这个元素,然后才能把它插入到正确的位置:

    var btn = $("<button>Hi</button>");
    btn.on('click', function(evt) { console.log("Clicked button") });
    $("#checkoutHolder").append(btn);
    
经管这个过程不算复杂,但是它需要开发者熟悉整个DOM树,而且JavaScript中的复杂逻辑代码还得不得不操作外部的DOM对象.

与之相反的是：AngularJS通过扩充HTML使得它拥有本地模型-视图-控制器(MVC)特性.这个设计抉择已经被证明:它使富有表达力的惊艳应用的构建过程变得快捷且有趣.

它使你这个开发者可以把你整个页面的某一个部分封装成一个应用.而不是强迫整个页面必须是一个Angualr应用.这个区别在下面这些场景下是非常有用的：当你的前端技术架构已经包含另一个框架;亦或你想让页面的一部分变得动态交互的同时，其它的部分仍然是静态页面操作方式或者被另外一个框架所控制.

此外,AngualrJS开发团队已经把压缩以后的体积之小作为一个特性：不会因为使用它就会让页面加载困难(此书写作时，angualrJS压缩以后的体积仅为9KB).这个特性使得AnguarlsJS非常适合做新功能特性原型开发.

##许可证##

AngularJS源代码通过Github免费向大家提供,它遵守MIT开源协议.这就意味着你可以向AngularJS项目贡献代码让它变得更酷.

如果你想贡献代码,AngularJS已经使这个流程相对比较简单直接:任何代码的主要改变都必须在Angular邮件列表上讨论,因此使得潜在的变化可以修改,允许其它开发者参与邮件列表讨论,防止代码和工作的重复.

更多关于贡献代码的信息可以在AngualrJS官方网站的contrubution部分找到.
